#!/bin/bash

# Copyright 2017 by the contributors
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.


set -o verbose
set -o errexit
set -o nounset
set -o pipefail

# Sanity check: This is a mustache template, so make the script die if any of
# these aren't set.
test -n "{{LoadBalancerDns}}"
test -n "{{LoadBalancerName}}"
test -n "{{ClusterToken}}"
test -n "{{NetworkingProviderUrl}}"
test -n "{{Region}}"

# reset kubeadm (workaround for kubelet package presence)
kubeadm reset

# Initialize master node
kubeadm init \
  --cloud-provider=aws \
  --token={{ClusterToken}} \
  --api-external-dns-names={{LoadBalancerDns}} \
  --use-kubernetes-version=$(cat /etc/kubernetes_community_ami_version)

# Add-on for networking providers, so pods can communicate.  see the scripts/
# directory of the quickstart.  Currently either calico.yaml or weave.yaml
kubectl apply -f {{NetworkingProviderUrl}}

INSTANCE_ID=$(ec2metadata --instance-id)
# Add this machine (master) to the load balancer for external access
aws elb register-instances-with-load-balancer \
  --load-balancer-name {{LoadBalancerName}} \
  --instances ${INSTANCE_ID} \
  --region {{Region}}

# Check if we're configured with an elasticsearch proxy instance
if [[ -n "{{EsProxyConfig}}" ]]; then
  # Set up a proxy to the elasticsearch cluster
  kubectl apply -f "{{EsProxyConfig}}"
fi

# Check if we're configured to set up fluentd to send logs to elasticsearch
if [[ -n "{{FluentdConfigUrl}}" ]]; then
  # Set up fluentd
  kubectl apply -f "{{FluentdConfigUrl}}"
fi

# Grab the client config for the admin user and leave it in the user's home dir, but reconfigure it with
# some sed magic.  What we're doing here:
# - Replacing the server with the publicly-visible load balancer address
# - Disabling TLS verification (since the hostname is random and not one of the SANs in the server cert)
# - Omitting the CA data, since it's not allowed when you're disabling TLS verification
KUBECONFIG_OUTPUT=/home/ubuntu/kubeconfig
cat /etc/kubernetes/admin.conf | \
  sed "s#server: https://.*:6443#server: https://{{LoadBalancerDns}}#" \
  >$KUBECONFIG_OUTPUT
chown ubuntu:ubuntu $KUBECONFIG_OUTPUT
chmod 0600 $KUBECONFIG_OUTPUT
